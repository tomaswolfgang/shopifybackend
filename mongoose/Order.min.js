var $jscomp={scope:{},findInternal:function(a,c,b){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(c.call(b,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");var mongoose=require("mongoose"),LineItem=require("./LineItem"),Product=require("./Product"),Schema=mongoose.Schema,OrderSchema=new Schema({buyer:{type:Schema.Types.ObjectId,ref:"User",required:!0},shop:{type:Schema.Types.ObjectId,ref:"Shop",required:!0},price:{type:Number,required:!0,"default":0},active:{type:Boolean,required:!0,"default":!0}},{timestamps:{}});
OrderSchema.methods.getProducts=function(a){LineItem.find({order:this._id}).populate("product").exec(function(c,b){return c?a(c):a(null,b)})};OrderSchema.statics.getOrders=function(a,c,b){this.find({buyer:a,shop:c}).exec(function(a,c){return a?b(a):b(null,c)})};OrderSchema.statics.getCart=function(a,c,b){var d=this;this.findOne({buyer:a,active:!0,shop:c}).exec(function(e,f){if(e)return b(e,"hi");if(f)return b(null,f);d.create({buyer:a,shop:c}).then(function(a){return b(null,a)})["catch"](function(a){return b(a)})})};
OrderSchema.statics.addToCart=function(a,c,b,d){this.getCart(c,b,function(b,c){if(b)return d(b);Product.findById(a,function(a,b){if(a)return d(a);if(isEmpty(b))return d("target product doesnt exist");LineItem.incrementOrCreate(c._id,b._id,function(a,e){if(a)return d(a);c.price+=b.price;c.save();return d(null,c)})})})};
OrderSchema.statics.removeFromCart=function(a,c,b,d){this.getCart(c,b,function(b,c){if(b)return d(b);Product.findById(a,function(a,b){if(a)return d(a);if(isEmpty(b))return d("target product doesnt exist");LineItem.decrementOrRemove(c._id,b._id,function(a,e){if(a)return d(a);c.price-=b.price;c.save();return d(null,c)})})})};
OrderSchema.statics.checkout=function(a,c,b){var d=this;this.getCart(a,c,function(e,f){if(e)return b(e);if(0===f.price)return b("Order must not be empty in order to checkout");d.create({buyer:a,shop:c}).then(function(){f.active=!1;f.save();return b(null,f)})["catch"](function(a){return b(a)})})};function isEmpty(a){for(var c in a)if(a.hasOwnProperty(c))return!1;return!0}module.exports=mongoose.model("Order",OrderSchema);
