var request=require("request"),assert=require("assert"),chai=require("chai"),chaiHttp=require("chai-http"),base_url="http://localhost:3000/",server=require("../server"),User=require("../mongoose/User");chai.use(chaiHttp);
describe("User functionality",function(){describe("create user",function(){beforeEach(function(a){User.collection.drop(function(b){a()})});it("creates user successfully",function(a){chai.request(base_url).post("user/create").send({username:"testytom",password:"testytom"}).end(function(b,c){b&&(assert(!1,b),a());assert(!c.body.error,c.body.message);a()})})});describe("login user",function(){User.collection.drop();beforeEach(function(a){(new User({username:"tommy",password:"asdf"})).save(function(b){a()})});
it("login",function(a){chai.request(base_url).post("user/login").send({username:"tommy",password:"asdf"}).end(function(b,c){b&&(assert(!1,b),a());assert(!c.body.error,c.body.message);a()})});afterEach(function(a){User.collection.drop(function(){a()})})});describe("logout user",function(){User.collection.drop();beforeEach(function(a){(new User({username:"tommy",password:"asdf"})).save(function(b){a()})});it("logout",function(a){var b=chai.request.agent(base_url);b.post("user/login").send({username:"tommy",
password:"asdf"}).then(function(){b.post("user/logout").then(function(c){assert(!c.body.error,c.body.message);a()})["catch"](function(a){return assert(!1,a)})})["catch"](function(a){return assert(!1,a)})});afterEach(function(a){User.collection.drop(function(){a()})})})});
